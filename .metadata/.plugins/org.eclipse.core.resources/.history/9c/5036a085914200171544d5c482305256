// Generated from IndicatorGrammar.g4 by ANTLR 4.7

package antlr.java;

import org.antlr.v4.runtime.tree.ParseTreeListener;

/**
 * This interface defines a complete listener for a parse tree produced by
 * {@link IndicatorGrammarParser}.
 */
public interface IndicatorGrammarListener extends ParseTreeListener {
	/**
	 * Enter a parse tree produced by {@link IndicatorGrammarParser#indicador}.
	 * @param ctx the parse tree
	 */
	void enterIndicador(IndicatorGrammarParser.IndicadorContext ctx);
	/**
	 * Exit a parse tree produced by {@link IndicatorGrammarParser#indicador}.
	 * @param ctx the parse tree
	 */
	void exitIndicador(IndicatorGrammarParser.IndicadorContext ctx);
	/**
	 * Enter a parse tree produced by {@link IndicatorGrammarParser#term}.
	 * @param ctx the parse tree
	 */
	void enterTerm(IndicatorGrammarParser.TermContext ctx);
	/**
	 * Exit a parse tree produced by {@link IndicatorGrammarParser#term}.
	 * @param ctx the parse tree
	 */
	void exitTerm(IndicatorGrammarParser.TermContext ctx);
	/**
	 * Enter a parse tree produced by {@link IndicatorGrammarParser#factor}.
	 * @param ctx the parse tree
	 */
	void enterFactor(IndicatorGrammarParser.FactorContext ctx);
	/**
	 * Exit a parse tree produced by {@link IndicatorGrammarParser#factor}.
	 * @param ctx the parse tree
	 */
	void exitFactor(IndicatorGrammarParser.FactorContext ctx);
	/**
	 * Enter a parse tree produced by {@link IndicatorGrammarParser#number}.
	 * @param ctx the parse tree
	 */
	void enterNumber(IndicatorGrammarParser.NumberContext ctx);
	/**
	 * Exit a parse tree produced by {@link IndicatorGrammarParser#number}.
	 * @param ctx the parse tree
	 */
	void exitNumber(IndicatorGrammarParser.NumberContext ctx);
	/**
	 * Enter a parse tree produced by {@link IndicatorGrammarParser#variable}.
	 * @param ctx the parse tree
	 */
	void enterVariable(IndicatorGrammarParser.VariableContext ctx);
	/**
	 * Exit a parse tree produced by {@link IndicatorGrammarParser#variable}.
	 * @param ctx the parse tree
	 */
	void exitVariable(IndicatorGrammarParser.VariableContext ctx);
}